* Perl 及它的社区

Perl5 最大的贡献是来自于随它而来的大量的可重用的库. 例如在Perl4里面就提供有机制用于连接像Oracle或者Sybase这样的数据库, 而在Perl 5里就具有真正的可扩展机制.
Larry希望人们可以很容易地创建及维护他们自己的扩展, 同时又不让Perl陷入各种不兼容的泥沼, Perl 5做到了 :)

这种机制让Perl 5社区的发展变得很快. 很多人愿意为Perl写各种库,更多的人则搜索并使用别人写好的库.

整个Perl社区是强大而健康的. 它欢迎各种层次的参与者, 从初学者到核心开发人员. 

通过Perl社区, 利用那些无数其它优秀Perl程序员的知识和经验, 这会让你更快的成为一个更好的程序员.

* The CPAN

Perl 5本身是一门实用主义的语言, 然而更实用主义的Perl社区已经扩展了这门语言,并让他们的工作可以很方便地为外界所用. 如果你有一个问题想要得到解决, 很大的可能是别人已经写好了代码并共享出来.
当下的Perl编程非常依赖于CPAN( The Comprehensive Perl Archive Network http://www.cpan.org/ ). 这是一个可重用Perl代码库的上传,分发及镜像系统. 它是世界上最大的代码库之一.

CPAN 提供了各种程序库, 从数据库接入到性能测量,再到几乎每一种网络协议, 它还包括各种音频和视频库和几乎每一种操作系统的Wrapper API.

目前来说,没有CPAN的Perl仅仅是一门语言,而有了CPAN的Perl则变得强大无比, 今人惊叹.

CPAN 会镜像那些可重用的Perl代码库的发行版(Distrubution), 一个发行版会包含一个或多个Perl 模块, 每个发行版都有其自己的CPAN命名空间及唯一的元数据.

CPAN 自身仅仅是一个镜像服务. 作者上传发行版后, CPAN会把他们加入各个镜像站点, 这样一来Perl 用户就可以通过CPAN客户端来进行下载,配置,构建,测试以及安装.

CPAN 之所以成功就在于它的简便以及有成千上万的志愿者愿意为他实现各种代码库的发行版, 特别是, CPAN社区有一系列标准来帮助识别那些合符规范的CPAN发行版的属性以及特性,这些包括:

  - CPAN 安装器(Installer) 的标准
  - 元数据(用于描述每个发行版) 的标准
  - 文档和许可证标准

此外, CPAN 还提供完整的自动化测试以保证在该发行版在各种平台和各种Perl版本下的正确性, 每个CPAN发行版在http://rt.cpan.org 上都有其自己的Ticket队列用来报告Bugs.
CPAN 还会链接到前一个发行版, 模块评分,文档等等, 所有这些都可以 http://search.cpan.org 找到.

目前的Perl安装会包含两个客户端用于连接,搜索,下载,构建,测试以及安装CPAN发行版. 它们是CPAN.pm 和CPANPLUS. 基本上它们的的功能没有太多的差异.
本书推荐使用CPAN.pm (以避免二义性) , 其最新版本(在当前包括了超过19800个稳定的发行版), 基于CPAN.pm, 模块安装其实非常容易.

    - 启动CPAN 客户端
      $ cpan

    - 通过CPAN安装发行版
      $ cpan
      cpan[1] > instqall Modern::Perl

以上两步也可以合而为一

      $ capn Modern::Perl
